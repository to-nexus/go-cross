package core

import (
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/core/vm"
)

// ##CROSS: fee log
var (
	// event CrossTransfer(address indexed from, address indexed to, uint256 amount, uint256 balFrom, uint256 balTo);
	transferLogSig    = common.HexToHash("0x1b49dfd76419ac50d37de77c8afd5e57b6472c9ddd8399f88dc61343356a462b")
	crosstokenAddress = common.HexToAddress("0x000000000000000000000000000000000000c001")
	crosstokenCode    = common.Hex2Bytes("0x608060405234801561000f575f80fd5b5060043610610055575f3560e01c806306fdde031461005957806318160ddd14610099578063313ce567146100af57806370a08231146100be57806395d89b41146100d9575b5f80fd5b60408051808201909152601281527121b937b9b9902730ba34bb32902a37b5b2b760711b60208201525b604051610090919061011c565b60405180910390f35b6100a16100fb565b604051908152602001610090565b60405160128152602001610090565b6100a16100cc366004610168565b6001600160a01b03163190565b604080518082019091526006815265086a49ea6a6f60d31b6020820152610083565b5f6101086012600a61028b565b6101179064174876e800610296565b905090565b5f602080835283518060208501525f5b818110156101485785810183015185820160400152820161012c565b505f604082860101526040601f19601f8301168501019250505092915050565b5f60208284031215610178575f80fd5b81356001600160a01b038116811461018e575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156101e357815f19048211156101c9576101c9610195565b808516156101d657918102915b93841c93908002906101ae565b509250929050565b5f826101f957506001610285565b8161020557505f610285565b816001811461021b576002811461022557610241565b6001915050610285565b60ff84111561023657610236610195565b50506001821b610285565b5060208310610133831016604e8410600b8410161715610264575081810a610285565b61026e83836101a9565b805f190482111561028157610281610195565b0290505b92915050565b5f61018e83836101eb565b80820281158282048414176102855761028561019556fea26469706673582212208624fd1907e95422b600e02542ffedfc5131222261eafb75e47434f7953ee43264736f6c63430008180033")
)

// AddTransferLog adds transfer log into state
func AddTransferLog(
	state vm.StateDB,
	sender, recipient common.Address,
	amount, balFrom, balTo *big.Int,
) {
	// ignore if amount is 0
	if amount.Cmp(common.Big0) <= 0 {
		return
	}

	dataInputs := []*big.Int{
		amount,
		balFrom,
		balTo,
	}

	var data []byte
	for _, v := range dataInputs {
		data = append(data, common.LeftPadBytes(v.Bytes(), 32)...)
	}

	// add transfer log
	state.AddLog(&types.Log{
		Address: crosstokenAddress,
		Topics: []common.Hash{
			transferLogSig,
			common.BytesToHash(sender.Bytes()),
			common.BytesToHash(recipient.Bytes()),
		},
		Data: data,
	})
}
